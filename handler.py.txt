import os, json, boto3
from urllib.parse import unquote_plus
from cleaner import process_csv

s3  = boto3.client("s3")
sns = boto3.client("sns")

RAW_BUCKET        = os.environ["RAW_BUCKET"]
CLEAN_BUCKET      = os.environ["CLEAN_BUCKET"]
QUARANTINE_BUCKET = os.environ["QUARANTINE_BUCKET"]
SNS_TOPIC_ARN     = os.environ["SNS_TOPIC_ARN"]
REQUIRED_COLUMNS  = os.environ.get("REQUIRED_COLUMNS","").split(",")

def main(event, _ctx):
    rec = event["Records"][0]["s3"]
    bucket = rec["bucket"]["name"]
    key    = unquote_plus(rec["object"]["key"])

    obj = s3.get_object(Bucket=bucket, Key=key)
    body = obj["Body"].read()

    cleaned, bad = process_csv(body, REQUIRED_COLUMNS)

    base = key.rsplit(".",1)[0]
    clean_key = f"{base}.clean.csv"
    s3.put_object(Bucket=CLEAN_BUCKET, Key=clean_key, Body=cleaned)

    result = {"original": f"s3://{bucket}/{key}", "clean": f"s3://{CLEAN_BUCKET}/{clean_key}"}

    if bad:
        bad_key = f"{base}.quarantine.csv"
        s3.put_object(Bucket=QUARANTINE_BUCKET, Key=bad_key, Body=bad)
        result["quarantine"] = f"s3://{QUARANTINE_BUCKET}/{bad_key}"

    sns.publish(
      TopicArn=SNS_TOPIC_ARN,
      Subject="CSV cleaner: processed file",
      Message=json.dumps(result, indent=2)
    )

    print(json.dumps({"level":"info","result":result}))
    return result
